name: NewBuild

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
  workflow_call:

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - name: Clone
        run: |
          git clone https://github.com/Dot-lua/TypeWriter/ ./
          ls

      - name: Download luvit
        working-directory: TypeWriter
        run: |
          mkdir ./Binary/
          cd ./Binary
          curl -fL https://github.com/truemedian/luvit-bin/raw/main/install.sh | sh
          ls
          pwd

      - name: Download Deps
        working-directory: TypeWriter/TypeWriter
        run: |
          function timeout() { perl -e 'alarm shift; exec @ARGV' "$@"; }
          for i in {1..5}; do timeout 10 ../Binary/lit install && break || sleep 15; done
          ls
          pwd

      - name: Install Executable deps
        working-directory: ./TypeWriter/TypeWriter/Assets/ExecutableProject/
        run: |
          function timeout() { perl -e 'alarm shift; exec @ARGV' "$@"; }
          for i in {1..5}; do timeout 10 ../../../Binary/lit install && break || sleep 15; done
          ls
          pwd

      - name: Build TypeWriter
        working-directory: ./TypeWriter/
        run: |
          ./Binary/luvi ./TypeWriter -o ./Binary/TypeWriter
          ls ../

      - name: Upload a Build Artifact
        working-directory: ./TypeWriter/Binary
        uses: actions/upload-artifact@v3.0.0
        with:
          name: TypeWriter-linux-$(arch)
          path: ./TypeWriter
  darwin:
    runs-on: macos-latest
    steps:
      - name: Checkout truemedian/luvit-bin
        uses: actions/checkout@v2

      - name: Clone
        working-directory: ci
        run: |
          chmod u+x build.sh
          ./build.sh clone
      - name: Build Luvi
        working-directory: ci
        run: |
          ./build.sh luvi
      - name: Build Lit
        working-directory: ci
        run: |
          ./build.sh lit
      - name: Build Luvit
        working-directory: ci
        run: |
          ./build.sh luvit
      - name: Package
        working-directory: ci
        run: |
          ./build.sh package
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.artifact }}
          path: ci/build/${{ env.artifact }}

  windows:
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        arch: [i386, x86_64]
    env:
      BUILD_ARCH: ${{ matrix.arch }}
    steps:
      - name: Checkout truemedian/luvit-bin
        uses: actions/checkout@v2

      - name: Cache Dependencies
        uses: actions/cache@v2
        id: cache
        with:
          path: C:\Program Files\NASM
          key: ${{ runner.os }}-nasm

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          choco install NASM
      - name: Setup PATH
        shell: pwsh
        run: |
          Write-Output "C:\Program Files\NASM" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: Clone
        working-directory: ci
        run: |
          ./build.ps1 clone
      - name: Build Luvi
        working-directory: ci
        run: |
          ./build.ps1 luvi
      - name: Build Lit
        working-directory: ci
        run: |
          ./build.ps1 lit
      - name: Build Luvit
        working-directory: ci
        run: |
          ./build.ps1 luvit
      - name: Package
        working-directory: ci
        run: |
          ./build.ps1 package
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.artifact }}
          path: ci/build/${{ env.artifact }}

  linux-arm:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [armv6, armv7, aarch64]
    steps:
      - name: Checkout truemedian/luvit-bin
        uses: actions/checkout@v2

      - name: Clone
        working-directory: ci
        run: |
          chmod u+x build.sh
          ./build.sh clone
      - uses: uraimo/run-on-arch-action@v2
        name: Build
        with:
          distro: stretch
          arch: ${{ matrix.arch }}

          shell: /bin/bash
          install: |
            apt-get update -q -y
            apt-get install -q -y build-essential perl git cmake
          run: |
            cd ci
            ./build.sh luvi
            ./build.sh lit
            ./build.sh luvit
            ./build.sh package
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.artifact }}
          path: ci/build/${{ env.artifact }}